

<div class="container">
  <div class="circle">
    <span class="circle__btn"></span>
    <span class="circle__back-1"></span>
    <span class="circle__back-2"></span>
  </div>






:root {
  --primary-light: #8abdff;
  --primary: #6d5dfc;
  --primary-dark: #5b0eeb;

  --white: #FFFFFF;
  --greyLight-1: #E4EBF5;
  --greyLight-2: #c8d0e7;
  --greyLight-3: #bec8e4;
  --greyDark: #9baacf;
}

$shadow: .3rem .3rem .6rem var(--greyLight-2),
-.2rem -.2rem .5rem var(--white);
$inner-shadow: inset .2rem .2rem .5rem var(--greyLight-2),
inset -.2rem -.2rem .5rem var(--white);

*, *::before, *::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%; // 1rem = 10px    100% = 16px
  overflow-y: scroll;
  background: var(--greyLight-1);

  @media screen and (min-width: 900px) {
        font-size: 75%; }
}

.container {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: 'Poppins', sans-serif;
  background: var(--greyLight-1);
}




.circle {

  width: 9rem;
  height: 100%;
  justify-self: center;
  border-radius: 1rem;
  display: grid;
  grid-template-rows: 1fr;
  justify-items: center;
  align-items: center;


  &__back-1, &__back-2 {
    grid-row: 1 / 2;
    grid-column: 1 / 2;
    width: 6rem;
    height: 6rem;
    border-radius: 50%;
    filter: blur(1px);
    z-index: 100;
  }

  &__back-1 {
    box-shadow: .4rem .4rem .8rem var(--greyLight-2),
    -.4rem -.4rem .8rem var(--white);
    background: linear-gradient(to bottom right, var(--greyLight-2) 0%, var(--white) 100%);
    animation: waves 4s linear infinite;

  }

  &__back-2 {
    box-shadow: .4rem .4rem .8rem var(--greyLight-2),
    -.4rem -.4rem .8rem var(--white);
    animation: waves 4s linear 2s infinite;

  }
}


@keyframes waves {
  0% {
    transform: scale(1);
    opacity: 1;
  }

  50% {
    opacity: 1;
  }

  100% {
    transform: scale(2);
    opacity: 0;
  }
}



















<script lang="ts">
	import picture from '$lib/images/test.jpg';
	import Hiking from 'svelte-google-materialdesign-icons/Hiking.svelte';


	import { onMount } from 'svelte';

  let x: number = 0;
  let y: number = 0;

  function generateRandomPosition() {
    x = Math.random() * window.innerWidth;
    y = Math.random() * window.innerHeight;
  }

  onMount(() => {
    generateRandomPosition();
  });


	export let type: 'solid' | 'outline' = 'solid';
	let buttonStyle = '';


	function moveButton(event) {
		const x = Math.random() * (window.innerWidth - 100);
		const y = Math.random() * (window.innerHeight - 50);
		buttonStyle = `position: absolute; left: ${x}px; top: ${y}px;`;
	}
</script>

<button class={type == 'solid' ? 'btn-solid' : 'btn-outline'}>
	<button class="moving-button" style={buttonStyle} on:mouseover={moveButton}>


</script>

<Hiking></Hiking>




<div class="x">
  <div class="shooting_star">Hey</div>
  <div id="paragraph">Hey</div>
</div>



<style lang="scss">
	.x {
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100vh;
	}

.shooting_star {
  position: absolute;
  left: 20%;
  top: 20%;
  height: 20px;
  background: linear-gradient(-45deg, var(--Orange), rgba(0, 0, 255, 0));
  border-radius: 999px;
  filter: drop-shadow(0 0 6px var(--Orange));
  animation:
    tail 3000ms ease-in-out infinite,
    shooting 3000ms ease-in-out infinite;
}

.shooting_star:before {
    content: 'before';
    position: absolute;
    top: calc(50% - 1px);
    right: 0;
    height: 2px;
    background: linear-gradient(-45deg, rgba(0, 0, 255, 0), var(--Orange), rgba(0, 0, 255, 0));
    transform: translateX(50%) rotateZ(45deg);
    border-radius: 100%;
    animation:
      shining 3000ms ease-in-out infinite,
      tail 3000ms ease-in-out infinite,
      shooting 3000ms ease-in-out infinite;
  }

  .shooting_star:after {
    content: 'after';
    position: absolute;
    top: calc(50% - 1px);
    right: 0;
    height: 2px;
    background: linear-gradient(-45deg, rgba(0, 0, 255, 0), var(--Orange), rgba(0, 0, 255, 0));
    transform: translateX(50%) rotateZ(45deg);
    border-radius: 100%;
    animation: shining 3000ms ease-in-out infinite;
    transform: translateX(50%) rotateZ(-45deg);
  }


  @keyframes tail {
  0% {
    width: 0;
  }

  30% {
    width: 100px;
  }

  100% {
    width: 0;
  }
}

@keyframes shining {
  0% {
    width: 0;
  }

  50% {
    width: 30px;
  }

  100% {
    width: 0;
  }
}

@keyframes shooting {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(300px);
  }
}

@keyframes sky {
  0% {
    transform: rotate(45deg);
  }

  100% {
    transform: rotate(45 + 360deg);
  }
}


</style>
